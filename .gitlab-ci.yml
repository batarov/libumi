stages:
  - test

include:
  - template: Code-Quality.gitlab-ci.yml
  - template: SAST.gitlab-ci.yml
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: Secret-Detection.gitlab-ci.yml

test:
  stage: test
  image: golang:1.14
  before_script:
    - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
    - chmod +x ./cc-test-reporter
    - ./cc-test-reporter before-build
  script:
    - go test -coverprofile=c.out -covermode count
  after_script:
    - sed -i 's/github.com\/umitop\/libumi\///g' c.out
    - ./cc-test-reporter after-build
    - go get github.com/jstemmer/go-junit-report
    - go test -v 2>&1 | go-junit-report -set-exit-code > junit.xml
    - go get github.com/t-yuki/gocover-cobertura
    - gocover-cobertura < c.out > cobertura.xml
    - bash <(curl -Ls https://coverage.codacy.com/get.sh)
  coverage: '/coverage: \d+.\d+% of statements/'
  artifacts:
    reports:
      cobertura: cobertura.xml
      junit: junit.xml
  only:
    - master

revive:
  stage: test
  image: golang:1:14
  before_script:
    - go get -u github.com/mgechev/revive
  script:
    - revive

golangci:
  stage: test
  image: golangci/golangci-lint:v1.30.0
  script:
    - golangci-lint run --enable-all
